<!DOCTYPE html>
<html lang="en-US" dir="ltr">
<head> 
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
	<!--[if ie]><meta http-equiv="X-UA-Compatible" content="chrome=1"><![endif]-->
	<meta name="author" content="William Chang"/>
	<title>Spiral Two-Dimensional Array - Prototype</title>
	<!-- BEGIN: Styles -->
	<link href="main.css" media="all" rel="stylesheet" type="text/css"/>
	<!-- END: Styles -->
	<!-- BEGIN: Page Specific -->
	<style type="text/css" media="all">
.row {margin-bottom:4px;padding:4px;overflow:hidden;}
.row label {float:left;width:100px;margin-right:10px;text-align:right;}
#input1 {background-color:#eee;}
#input1 .value {display:block;margin-left:120px;}
#input1 strong {font-weight:bold;}
#input1 textarea {width:80%;height:200px;}
#output1 {background-color:#ddd;overflow:hidden;}
#output1 .value {display:block;margin-left:120px;}
#output1 .value span {float:left;width:48px;text-align:left;}
	</style>
	<!-- END: Page Specific -->
</head>
<body>
<div id="frame">
	<div id="region_header">
<!-- BEGIN: Region Header -->
		<h1>Spiral Two-Dimensional Array</h1>
<!-- END: Region Header -->
	</div>
	<div id="region_middle">
<!-- BEGIN: Template Region Middle -->
		<div id="input1" class="row"><label>Input</label><div class="value">
			<strong>Must be a two-dimensional array with odd lengths. Must be a well-formed JSON string.</strong>
<textarea>
[
	[101, 102, 103, 104, 105],
	[106, 107, 108, 109, 110],
	[111, 112, 113, 114, 115],
	[116, 117, 118, 119, 120],
	[121, 122, 123, 124, 125]
]
</textarea>
			<div class="controlpanel"><a href="#" class="btn btn_create">Run</a></div>
		</div></div>
		<div id="output1" class="row"><label>Output</label><span class="value"></span></div>
<!-- END: Template Region Middle -->
	</div>
	<div class="line"></div>
	<div id="region_footer">
<!-- BEGIN: Region Footer -->
		<div class="credit center">Developed by <a href="http://www.williamchang.org/" title="DieHard">William Chang</a></div>
<!-- END: Region Footer -->
	</div>
</div>
<!-- BEGIN: Scripts -->
	<!--<script src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js" type="text/javascript"></script>-->
	<script src="jquery.min.js" type="text/javascript"></script>
	<script type="text/javascript">
	//<![CDATA[
// Register ready event to be executed when the DOM document has finished loading.
$(document).ready(function() {
	// Is number even (true) or odd (false).
	function isNumberEven(numValue) {
		if(numValue % 2 == 0) {
			return true;
		} else {
			return false;
		}
	}

	// Get linear spiral from two-dimensional array with odd lengths. 
	function getLinearSpiral(arrOdd) {
		// Declare constants.
		var DIRECTION_UP = 0, DIRECTION_RIGHT = 1, DIRECTION_DOWN = 2, DIRECTION_LEFT = 3;

		// Get lengths of X and Y from two-dimensional array argument.
		var numLengthY = arrOdd.length;
		var numLengthX = arrOdd[0].length;

		// Validate lengths of X and Y for odd numbers.
		if(isNumberEven(numLengthX) || isNumberEven(numLengthY)) {alert('Must be a two-dimensional array with odd lengths.');return [];}

		// Get center of X and Y from two-dimensional array argument.
		var numY = Math.floor(numLengthY / 2);
		var numX = Math.floor(numLengthX / 2);

		// Declare and init for one-dimensional array.
		var arrLinear = [];
		var numIndex = 0;

		// Declare and init for walking in a spiral.
		var boolRepeat = true;
		var numDirection = 0;
		var numDistance = 1;
		var numStep = 1;

		// Add first item from the center of two-dimensional array.
		arrLinear[numIndex] = arrOdd[numY][numX];
		numIndex += 1;

		// Parse two-dimensional array to one-dimensional array in a spiral from the center.
		// Algorithm has an order of n time complexity, O(n).
		while(boolRepeat) {
			// Walk the two-dimensional array.
			switch(numDirection) {
				case DIRECTION_UP:
					numX = numX;
					numY -= 1;
					break;
				case DIRECTION_RIGHT:
					numX += 1;
					numY = numY;
					break;
				case DIRECTION_DOWN:
					numX = numX;
					numY += 1;
					break;
				case DIRECTION_LEFT:
					numX -= 1;
					numY = numY;
					break;
			}

			// Validate boundaries of two-dimensional array.
			if((numX >= 0 && numY >= 0) && (numX < numLengthX && numY < numLengthY)) {
				// Convert two-dimensional array to one-dimensional array.
				arrLinear[numIndex] = arrOdd[numY][numX];
				numIndex += 1;
			} else {
				break;
			}

			// Set direction and distance.
			if(numStep >= numDistance) {
				switch(numDirection) {
					case DIRECTION_UP:
						numDirection += 1; // Go right.
						numDistance = numDistance;
						break;
					case DIRECTION_RIGHT:
						numDirection += 1; // Go down.
						numDistance += 1;
						break;
					case DIRECTION_DOWN:
						numDirection += 1; // Go left.
						numDistance = numDistance;
						break;
					case DIRECTION_LEFT:
						numDirection = DIRECTION_UP; // Go up.
						numDistance += 1;
						break;
				}
				numStep = 1;
			} else {
				numStep += 1;
			}
		}
		return arrLinear;
	}

	// Bind event.
	$('#input1 .btn_create').bind('click', function(evt) {
		// Declare and init for markup code.
		var strValue = '';
		// Get and set user input.
		var objInput = $.parseJSON($('#input1 textarea').val())
		// Get and set linear spiral.
		var arrResults = getLinearSpiral(objInput);
		// Parse results to markup code.
		for(var numIndex = 0;numIndex < arrResults.length;numIndex += 1) {
			strValue += '<span>' + arrResults[numIndex] + '</span>';
		}
		// Output markup code to document.
		$('#output1 span').html(strValue);
		// Prevent default action.
		return false;
	});

	// Boilerplates of debug.
	// console.log('CURRENT : Id : ' + arrLinear[numIndex] + ', Direction : ' + numDirection + ', Distance : ' + numDistance + ', Step: ' + numStep);
	// console.log('CHANGED : Direction : ' + numDirection + ', Distance : ' + numDistance + ', Step : ' + numStep);
});
	//]]>
	</script>
<!-- END: Scripts -->
</body>
</html>